{
  "version": 3,
  "file": "angular-star-rating.js",
  "sources": [
    "ng://angular-star-rating/out/src/angular-star-rating.module.ts",
    "ng://angular-star-rating/out/src/components/star-rating.component.ts",
    "ng://angular-star-rating/out/src/services/star-rating-config.service.ts",
    "ng://angular-star-rating/out/src/services/star-rating.ts",
    "ng://angular-star-rating/out/src/services/star-rating.utils.ts",
    "ng://angular-star-rating/out/src/interfaces/star-rating-config.interface.ts"
  ],
  "sourcesContent": [
    "import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {StarRatingComponent} from './components/star-rating.component';\nimport {StarRatingConfigService} from './services/star-rating-config.service';\n\nconst DECLARATIONS = [StarRatingComponent];\nconst EXPORTS = [DECLARATIONS];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DECLARATIONS],\n  exports: [EXPORTS]\n})\nexport class StarRatingModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StarRatingModule,\n      providers: [\n        StarRatingConfigService\n      ]\n    }\n  }\n\n  static  forChild(): ModuleWithProviders {\n    return {\n      ngModule: StarRatingModule,\n      providers: []\n    }\n  }\n}\n",
    "import {Component, EventEmitter, forwardRef, Input} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {ClickEvent} from '../interfaces/click-event.interface';\r\nimport {HoverRatingChangeEvent} from '../interfaces/hover-rating-change-event.interface';\r\nimport {RatingChangeEvent} from '../interfaces/rating-change-event.interface';\r\nimport {StarRating} from '../services/star-rating';\r\nimport {StarRatingConfigService} from '../services/star-rating-config.service';\r\nimport {StarRatingUtils} from '../services/star-rating.utils';\r\n\r\nconst STAR_RATING_CONTROL_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => StarRatingComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'star-rating-comp',\r\n  providers: [STAR_RATING_CONTROL_ACCESSOR],\r\n  inputs: [\r\n    'getHalfStarVisible'\r\n    , 'getColor'\r\n    , 'showHalfStars'\r\n    , 'hoverEnabled'\r\n    , 'rating'\r\n    , 'step'\r\n    , 'disabled'\r\n    , 'readOnly'\r\n    , 'space'\r\n    , 'starType'\r\n    , 'size'\r\n    , 'speed'\r\n    , 'numOfStars'\r\n    , 'direction'\r\n    , 'staticColor'\r\n    //, 'labelVisible'\r\n    , 'labelPosition'\r\n    , 'labelText'\r\n    , 'id'\r\n  ],\r\n  outputs: [\r\n    'clickEmitter'\r\n    , 'ratingChangeEmitter'\r\n    , 'hoverRatingChangeEmitter'\r\n  ],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (blur)=\"onBlur($event)\"\r\n  (focus)=\"onFocus($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty default-star-empty-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half default-star-half-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled default-star-filled-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class StarRatingComponent extends StarRating implements ControlValueAccessor {\r\n\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  clickEmitter: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.clickEmitter) {\r\n      this.clickEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  ratingChangeEmitter: EventEmitter<RatingChangeEvent> = new EventEmitter<RatingChangeEvent>();\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChangeEmitter) {\r\n      this.ratingChangeEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  hoverRatingChangeEmitter: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<HoverRatingChangeEvent>();\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChangeEmitter) {\r\n      this.hoverRatingChangeEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  onTouch: Function;\r\n  onModelChange: Function;\r\n  private onModelChangeRegistered: boolean = false;\r\n  private onTouchRegistered: boolean = false;\r\n\r\n  saveOnTouch() {\r\n    if (this.onTouchRegistered) {\r\n      this.onTouch();\r\n    }\r\n  }\r\n\r\n  saveOnModelChange(value: number) {\r\n    if (this.onModelChangeRegistered) {\r\n      this.onModelChange(value);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      let dStr = \"Digit\";\r\n      let digit: number = parseInt(eventCode.substr(dStr.length, eventCode.length - 1));\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (handlers[event['code']] || StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Focus events\r\n  onBlur(event: FocusEvent) {\r\n    this.focus = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    this.focus = true;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString()) : 0;\r\n\r\n    //fire onHoverRatingChange event\r\n    let $event: HoverRatingChangeEvent = {hoverRating: this.hoverRating};\r\n    this.saveOnHover($event);\r\n\r\n\r\n  }\r\n\r\n  /**Form Control - ControlValueAccessor implementation**/\r\n\r\n  writeValue(obj: any): void {\r\n    this.rating = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n    this.onModelChangeRegistered = true;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n    this.onTouchRegistered = true;\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    let initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      let $event: RatingChangeEvent = {rating: this.rating};\r\n      this.saveOnRatingChange($event);\r\n\r\n      this.saveOnModelChange(this.rating);\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    let onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n\r\n  }\r\n\r\n}\r\n",
    "import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarTypes,\r\n  starRatingLabelPosition\r\n} from '../interfaces/star-rating-config.interface';\r\n\r\n/**\r\n * Configuration service for the StarRating component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the star ratings used in the application.\r\n */\r\nexport class StarRatingConfigService implements StarRatingConfig {\r\n\r\n  _classEmpty = \"default-star-empty-icon\";\r\n\r\n  get classEmpty() {\r\n    return this._classEmpty;\r\n  }\r\n\r\n  set classEmpty(classEmpty: string) {\r\n    this._classEmpty = classEmpty;\r\n  }\r\n\r\n  private _classHalf = \"default-star-half-icon\";\r\n\r\n  get classHalf(): string {\r\n    return this._classHalf;\r\n  }\r\n\r\n  set classHalf(classHalf: string) {\r\n    this._classHalf = classHalf;\r\n  }\r\n\r\n  private _classFilled = \"default-star-filled-icon\";\r\n\r\n  get classFilled(): string {\r\n    return this._classFilled;\r\n  }\r\n\r\n  set classFilled(classFilled: string) {\r\n    this._classFilled = classFilled;\r\n  }\r\n\r\n  private _numOfStars = 5;\r\n\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(numOfStars: number) {\r\n    this._numOfStars = numOfStars;\r\n  }\r\n\r\n  private _size: starRatingSizes = \"medium\";\r\n\r\n  get size(): starRatingSizes {\r\n    return this._size;\r\n  }\r\n\r\n  set size(size: starRatingSizes) {\r\n    this._size = size;\r\n  }\r\n\r\n  private _staticColor: starRatingColor;\r\n\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n  }\r\n\r\n  private _labelPosition: starRatingLabelPosition = \"left\";\r\n\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(labelPosition: starRatingLabelPosition) {\r\n    this._labelPosition = labelPosition;\r\n  }\r\n\r\n  private _speed: starRatingSpeed = \"noticeable\";\r\n\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(speed: starRatingSpeed) {\r\n    this._speed = speed;\r\n  }\r\n\r\n  private _starType: starRatingStarTypes = \"svg\";\r\n\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType;\r\n  }\r\n\r\n  set starType(starType: starRatingStarTypes) {\r\n    this._starType = starType;\r\n  }\r\n\r\n  private _assetsPath = \"assets/images/\";\r\n\r\n  get assetsPath(): string {\r\n    return this._assetsPath;\r\n  }\r\n\r\n  set assetsPath(assetsPath: string) {\r\n    this._assetsPath = assetsPath;\r\n  }\r\n\r\n  private _svgPath = this.assetsPath + \"star-rating.icons.svg\";\r\n\r\n  get svgPath(): string {\r\n    return this._svgPath;\r\n  }\r\n\r\n  set svgPath(svgPath: string) {\r\n    this._svgPath = svgPath;\r\n  }\r\n\r\n  private _svgEmptySymbolId = \"star-empty\";\r\n\r\n  get svgEmptySymbolId(): string {\r\n    return this._svgEmptySymbolId;\r\n  }\r\n\r\n  set svgEmptySymbolId(svgEmptySymbolId: string) {\r\n    this._svgEmptySymbolId = svgEmptySymbolId;\r\n  }\r\n\r\n  private _svgHalfSymbolId = \"star-half\";\r\n\r\n  get svgHalfSymbolId(): string {\r\n    return this._svgHalfSymbolId;\r\n  }\r\n\r\n  set svgHalfSymbolId(svgHalfSymbolId: string) {\r\n    this._svgHalfSymbolId = svgHalfSymbolId;\r\n  }\r\n\r\n  private _svgFilledSymbolId = \"star-filled\";\r\n\r\n  get svgFilledSymbolId(): string {\r\n    return this._svgFilledSymbolId;\r\n  }\r\n\r\n  set svgFilledSymbolId(svgFilledSymbolId: string) {\r\n    this._svgFilledSymbolId = svgFilledSymbolId;\r\n  }\r\n\r\n  private _svgPathEmpty: string = this.svgPath + \"#\" + this.svgEmptySymbolId;\r\n\r\n  get svgPathEmpty(): string {\r\n    return this._svgPathEmpty;\r\n  }\r\n\r\n  set svgPathEmpty(svgPathEmpty: string) {\r\n    this._svgPathEmpty = svgPathEmpty;\r\n  }\r\n\r\n  private _svgPathHalf: string = this.svgPath + \"#\" + this.svgHalfSymbolId;\r\n\r\n  get svgPathHalf(): string {\r\n    return this._svgPathHalf;\r\n  }\r\n\r\n  set svgPathHalf(svgPathHalf: string) {\r\n    this._svgPathHalf = svgPathHalf;\r\n  }\r\n\r\n  private _svgPathFilled: string = this.svgPath + \"#\" + this.svgFilledSymbolId;\r\n\r\n  get svgPathFilled(): string {\r\n    return this._svgPathFilled;\r\n  }\r\n\r\n  set svgPathFilled(svgPathFilled: string) {\r\n    this._svgPathFilled = svgPathFilled;\r\n  }\r\n\r\n  getColor(rating: number, numOfStars: number, staticColor?: starRatingColor): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    // if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    // calculate size of smallest fraction\r\n    const fractionSize = numOfStars / 3;\r\n\r\n    // apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n\r\n}\r\n",
    "import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingDirection,\r\n  starRatingLabelPosition,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarSpace,\r\n  starRatingStarTypes\r\n} from '../interfaces/star-rating-config.interface';\r\nimport {StarRatingConfigService} from './star-rating-config.service';\r\nimport {StarRatingUtils} from './star-rating.utils';\r\n\r\nexport class StarRating {\r\n\r\n  protected config: StarRatingConfig;\r\n\r\n  //Inputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * id property to identify the DOM element\r\n   */\r\n  protected _id: string;\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: string) {\r\n    this._id = value || '';\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * focus\r\n   */\r\n  protected _focus: boolean;\r\n  get focus(): boolean {\r\n    return this._focus;\r\n  }\r\n\r\n  set focus(value: boolean) {\r\n    this._focus = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelText\r\n   */\r\n  protected _labelText: string;\r\n  get labelText(): string {\r\n    return this._labelText;\r\n  }\r\n\r\n  set labelText(value: string) {\r\n    this._labelText = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelPosition\r\n   */\r\n  protected _labelPosition: starRatingLabelPosition;\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(value: starRatingLabelPosition) {\r\n    this._labelPosition = value || this.config.labelPosition;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelVisible\r\n   */\r\n  protected _labelVisible: boolean;\r\n  get labelVisible(): boolean {\r\n    return this._labelVisible;\r\n  }\r\n\r\n  set labelVisible(value: boolean) {\r\n    this._labelVisible = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverEnabled\r\n   */\r\n  protected _hoverEnabled: boolean;\r\n  get hoverEnabled(): boolean {\r\n    return this._hoverEnabled;\r\n  }\r\n\r\n  set hoverEnabled(value: boolean) {\r\n    this._hoverEnabled = (value !== undefined) ? !!value : false;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * staticColor\r\n   */\r\n  protected _staticColor: starRatingColor;\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value  || this.config.staticColor || undefined;\r\n\r\n    //update color.\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * direction\r\n   */\r\n  protected _direction: starRatingDirection;\r\n  get direction(): starRatingDirection {\r\n    return this._direction;\r\n  }\r\n\r\n  set direction(value: starRatingDirection) {\r\n    this._direction = value || undefined;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n\r\n  /**\r\n   * numOfStars\r\n   */\r\n  protected _numOfStars: number;\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(value: number) {\r\n    this._numOfStars = (value > 0) ? value : this.config.numOfStars;\r\n\r\n    //update stars array\r\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\r\n\r\n    //update color\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverRating\r\n   */\r\n  protected _hoverRating: number;\r\n  get hoverRating(): number {\r\n    return this._hoverRating;\r\n  }\r\n\r\n  set hoverRating(value: number) {\r\n    this._hoverRating = (value > 0) ? value : 0;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * speed\r\n   */\r\n  protected _speed: starRatingSpeed;\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(value: starRatingSpeed) {\r\n    this._speed = value || this.config.speed;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * size\r\n   */\r\n  protected _size: starRatingSizes;\r\n  get size(): starRatingSizes {\r\n    return this._size || this.config.size;\r\n  }\r\n\r\n  set size(value: starRatingSizes) {\r\n    this._size = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * starType\r\n   */\r\n  protected _starType: starRatingStarTypes;\r\n  get starType(): starRatingStarTypes {\r\n     return this._starType || this.config.starType;\r\n  }\r\n\r\n  set starType(value: starRatingStarTypes) {\r\n    this._starType = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * space\r\n   */\r\n  protected _space: starRatingStarSpace;\r\n  get space(): starRatingStarSpace {\r\n    return this._space;\r\n  }\r\n\r\n  set space(value: starRatingStarSpace) {\r\n    this._space = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * readOnly\r\n   */\r\n  protected _readOnly: boolean;\r\n  get readOnly(): boolean {\r\n    return this._readOnly;\r\n  }\r\n\r\n  set readOnly(value: boolean) {\r\n    this._readOnly = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * disabled\r\n   */\r\n  protected _disabled: boolean;\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  private _step: number;\r\n  get step(): number {\r\n    return this._step;\r\n  }\r\n\r\n  set step(value: number) {\r\n    this._step = (value > 0 ? value : 1);\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * rating\r\n   */\r\n  protected _rating: number;\r\n  get rating(): number {\r\n    return this._rating;\r\n  }\r\n\r\n  /**\r\n   * setRating\r\n   * I use a setter function instead of a set method to enable overrides for this function.\r\n   * @param value\r\n   */\r\n  setRating(value: number) {\r\n    //validate and apply newRating\r\n    let newRating: number = 0;\r\n    if (value >= 0\r\n      && value <= this.numOfStars) {\r\n      newRating = value;\r\n    }\r\n\r\n    //limit max value to max number of stars\r\n    if (value > this.numOfStars) {\r\n      newRating = this.numOfStars;\r\n    }\r\n    this._rating = newRating;\r\n\r\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\r\n    this.ratingAsInteger = parseInt(this._rating.toString());\r\n\r\n    //update halfStarsVisible\r\n    this.setHalfStarVisible();\r\n\r\n    //update calculated Color\r\n    this.setColor();\r\n\r\n  }\r\n\r\n  set rating(value: number) {\r\n    this.setRating(value);\r\n  }\r\n\r\n  /**\r\n   * showHalfStars\r\n   */\r\n  protected _showHalfStars: boolean;\r\n  get showHalfStars(): boolean {\r\n    return this._showHalfStars;\r\n  }\r\n\r\n  set showHalfStars(value: boolean) {\r\n    this._showHalfStars = !!value;\r\n\r\n    //update halfStarVisible\r\n    this.setHalfStarVisible();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getColor\r\n   */\r\n  getColor: (rating: number, numOfStars: number, staticColor?: starRatingColor) => starRatingColor;\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getHalfStarVisible\r\n   */\r\n  getHalfStarVisible: (rating: number) => boolean;\r\n  /////////////////////////////////////////////\r\n\r\n  //CTRL ONLY\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n  classEmpty: string;\r\n  classHalf: string;\r\n  classFilled: string;\r\n\r\n  pathEmpty: string;\r\n  pathHalf: string;\r\n  pathFilled: string;\r\n\r\n  color: starRatingColor;\r\n  stars: Array<number>;\r\n  ratingAsInteger: number;\r\n  halfStarVisible: boolean;\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n\r\n    this.config = config;\r\n\r\n    //set default ctrl props\r\n    this.classEmpty = this.config.classEmpty;\r\n    this.classHalf = this.config.classHalf;\r\n    this.classFilled = this.config.classFilled;\r\n    this.pathEmpty = this.config.svgPathEmpty;\r\n    this.pathHalf = this.config.svgPathHalf;\r\n    this.pathFilled = this.config.svgPathFilled;\r\n\r\n    //set default Component Inputs\r\n    if ('getColor' in this.config && typeof this.config.getColor === \"function\") {\r\n      this.getColor = this.config.getColor;\r\n    }\r\n\r\n    if ('getHalfStarVisible' in this.config && typeof this.config.getHalfStarVisible === \"function\") {\r\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\r\n    }\r\n\r\n    this.numOfStars = this.config.numOfStars;\r\n    this.rating = 0;\r\n    this.step = 1;\r\n\r\n  }\r\n\r\n  svgVisible(): boolean {\r\n    return this.starType === \"svg\";\r\n  }\r\n\r\n  interactionPossible(): boolean {\r\n    return !this.readOnly && !this.disabled;\r\n  }\r\n\r\n  setColor(): void {\r\n    //check if custom function is given\r\n    if (typeof this.getColor === \"function\") {\r\n      this.color = this.getColor(this.rating, this.numOfStars, this.staticColor);\r\n    }\r\n    else {\r\n      this.color = StarRatingUtils.getColor(this.rating, this.numOfStars, this.staticColor);\r\n    }\r\n  }\r\n\r\n  setHalfStarVisible(): void {\r\n    //update halfStarVisible\r\n    if (this.showHalfStars) {\r\n      //check if custom function is given\r\n      if (typeof this.getHalfStarVisible === \"function\") {\r\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\r\n      } else {\r\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.halfStarVisible = false;\r\n    }\r\n  }\r\n\r\n  getComponentClassNames(): string {\r\n    let classNames: string[] = [];\r\n\r\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\r\n    classNames.push(this.halfStarVisible ? 'half' : '');\r\n    classNames.push(this.hoverEnabled ? 'hover' : '');\r\n\r\n    let hoverRating = (this.hoverRating ? 'hover-' + this.hoverRating : 'hover-0');\r\n    classNames.push(this.hoverEnabled ? hoverRating : '');\r\n\r\n    classNames.push(this.space ? 'space-' + this.space : '');\r\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\r\n    classNames.push(this.color ? 'color-' + this.color : '');\r\n    classNames.push(this.starType ? 'star-' + this.starType : '');\r\n    classNames.push(this.speed);\r\n    classNames.push(this.size);\r\n    classNames.push(this.readOnly ? 'read-only' : '');\r\n    classNames.push(this.disabled ? 'disabled' : '');\r\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\r\n\r\n    return classNames.join(' ');\r\n  }\r\n\r\n  increment() {\r\n    //increment to next higher step\r\n    let absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\r\n  }\r\n\r\n  decrement() {\r\n    //decrement to next lower step\r\n    let absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\r\n  }\r\n\r\n  reset() {\r\n    this.rating = 0;\r\n  }\r\n\r\n}\r\n",
    "import {starRatingColor} from '../interfaces/star-rating-config.interface';\r\nexport class StarRatingUtils {\r\n    //Static methods\r\n    ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /*\r\n     * getStarsArray\r\n     *\r\n     * returns an array of increasing numbers starting at 1\r\n     *\r\n     * @param numOfStars\r\n     * @returns {Array}\r\n     */\r\n    static getStarsArray(numOfStars: number): Array<number> {\r\n        let stars: Array<number> = [];\r\n        for (let i = 0; i < numOfStars; i++) {\r\n            stars.push(i + 1);\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    /*\r\n     * getHalfStarVisible\r\n     *\r\n     * Returns true if there should be a half star visible, and false if not.\r\n     *\r\n     * @param rating\r\n     * @returns {boolean}\r\n     */\r\n    static getHalfStarVisible(rating: number): boolean {\r\n        return Math.abs(rating % 1) > 0;\r\n    }\r\n\r\n    /*\r\n     * getColor\r\n     *\r\n     * The default function for color calculation\r\n     * based on the current rating and the the number of stars possible.\r\n     * If a staticColor is set the function will use it as return value.\r\n     *\r\n     * @param rating\r\n     * @param numOfStars\r\n     * @param staticColor\r\n     * @returns {starRatingColor}\r\n     */\r\n    static getColor(rating: number, numOfStars: number, staticColor?: starRatingColor): starRatingColor {\r\n        rating = rating || 0;\r\n\r\n        //if a fix color is set use this one\r\n        if (staticColor) {\r\n            return staticColor;\r\n        }\r\n\r\n        //calculate size of smallest fraction\r\n        let fractionSize = numOfStars / 3;\r\n\r\n        //apply color by fraction\r\n        let color: starRatingColor = 'default';\r\n        if (rating > 0) {\r\n            color = 'negative';\r\n        }\r\n        if (rating > fractionSize) {\r\n            color = 'ok';\r\n        }\r\n        if (rating > fractionSize * 2) {\r\n            color = 'positive';\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    /*\r\n     * isDigitKeyEventCode\r\n     * detects digit key event sodes\r\n     * @param eventCode\r\n     * @returns {boolean}\r\n     */\r\n    static isDigitKeyEventCode(eventCode: string): boolean {\r\n        return eventCode.indexOf('Digit') === 0;\r\n    };\r\n\r\n}\r\n",
    "export type starRatingSizes = 'small' | 'medium' | 'large';\r\nexport type starRatingColor = 'default' | 'negative' | 'ok' | 'positive';\r\nexport type starRatingSpeed = 'immediately' | 'noticeable' | 'slow';\r\nexport type starRatingLabelPosition = 'left' | 'right' | 'top' | 'bottom';\r\nexport type starRatingStarTypes = 'svg' | 'icon' | 'image';\r\nexport type starRatingStarSpace= 'no' | 'between' | 'around';\r\nexport type starRatingDirection= 'rtl' | 'ltr';\r\n\r\nexport class StarRatingConfig {\r\n  // binding defaults\r\n  numOfStars?: number;\r\n  size?: starRatingSizes;\r\n  speed?: starRatingSpeed;\r\n  labelPosition?: starRatingLabelPosition;\r\n  starType?: starRatingStarTypes;\r\n  staticColor: starRatingColor;\r\n  getColor?: (rating: number, numOfStars: number, staticColor?: starRatingColor)=> starRatingColor;\r\n  getHalfStarVisible?:(rating: number) => boolean\r\n  // statics\r\n  classEmpty?: string;\r\n  classHalf?: string;\r\n  classFilled?: string;\r\n  assetsPath?: string;\r\n  svgPath?: string;\r\n  svgEmptySymbolId?: string;\r\n  svgHalfSymbolId?: string;\r\n  svgFilledSymbolId?: string;\r\n  svgPathEmpty?: string;\r\n  svgPathHalf?: string;\r\n  svgPathFilled?: string;\r\n}\r\n"
  ],
  "names": [
    "tslib_1.__extends"
  ],
  "mappings": "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"
}
