{
  "version": 3,
  "file": "angular-star-rating.umd.min.js",
  "sources": [
    "ng://angular-star-rating/node_modules/tslib/tslib.es6.js",
    "ng://angular-star-rating/out/src/interfaces/star-rating-config.interface.ts",
    "ng://angular-star-rating/out/src/services/star-rating.utils.ts",
    "ng://angular-star-rating/out/src/services/star-rating.ts",
    "ng://angular-star-rating/out/src/services/star-rating-config.service.ts",
    "ng://angular-star-rating/out/src/components/star-rating.component.ts",
    "ng://angular-star-rating/out/src/angular-star-rating.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "export type starRatingSizes = 'small' | 'medium' | 'large';\r\nexport type starRatingColor = 'default' | 'negative' | 'ok' | 'positive';\r\nexport type starRatingSpeed = 'immediately' | 'noticeable' | 'slow';\r\nexport type starRatingLabelPosition = 'left' | 'right' | 'top' | 'bottom';\r\nexport type starRatingStarTypes = 'svg' | 'icon' | 'image';\r\nexport type starRatingStarSpace = 'no' | 'between' | 'around';\r\nexport type starRatingDirection = 'rtl' | 'ltr';\r\n\r\nexport class StarRatingConfig {\r\n  // binding defaults\r\n  numOfStars?: number;\r\n  size?: starRatingSizes;\r\n  speed?: starRatingSpeed;\r\n  labelPosition?: starRatingLabelPosition;\r\n  starType?: starRatingStarTypes;\r\n  staticColor: starRatingColor;\r\n  getColor?: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  getHalfStarVisible?: (rating: number) => boolean;\r\n  // statics\r\n  classEmpty?: string;\r\n  classHalf?: string;\r\n  classFilled?: string;\r\n  assetsPath?: string;\r\n  svgPath?: string;\r\n  svgEmptySymbolId?: string;\r\n  svgHalfSymbolId?: string;\r\n  svgFilledSymbolId?: string;\r\n  svgPathEmpty?: string;\r\n  svgPathHalf?: string;\r\n  svgPathFilled?: string;\r\n}\r\n",
    "import { starRatingColor } from '../interfaces/star-rating-config.interface';\r\nexport class StarRatingUtils {\r\n  //Static methods\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /*\r\n     * getStarsArray\r\n     *\r\n     * returns an array of increasing numbers starting at 1\r\n     *\r\n     * @param numOfStars\r\n     * @returns {Array}\r\n     */\r\n  static getStarsArray(numOfStars: number): Array<number> {\r\n    let stars: Array<number> = [];\r\n    for (let i = 0; i < numOfStars; i++) {\r\n      stars.push(i + 1);\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  /*\r\n     * getHalfStarVisible\r\n     *\r\n     * Returns true if there should be a half star visible, and false if not.\r\n     *\r\n     * @param rating\r\n     * @returns {boolean}\r\n     */\r\n  static getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n\r\n  /*\r\n     * getColor\r\n     *\r\n     * The default function for color calculation\r\n     * based on the current rating and the the number of stars possible.\r\n     * If a staticColor is set the function will use it as return value.\r\n     *\r\n     * @param rating\r\n     * @param numOfStars\r\n     * @param staticColor\r\n     * @returns {starRatingColor}\r\n     */\r\n  static getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    //if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    //calculate size of smallest fraction\r\n    let fractionSize = numOfStars / 3;\r\n\r\n    //apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  /*\r\n     * isDigitKeyEventCode\r\n     * detects digit key event sodes\r\n     * @param eventCode\r\n     * @returns {boolean}\r\n     */\r\n  static isDigitKeyEventCode(eventCode: string): boolean {\r\n    return eventCode.indexOf('Digit') === 0;\r\n  }\r\n}\r\n",
    "import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingDirection,\r\n  starRatingLabelPosition,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarSpace,\r\n  starRatingStarTypes\r\n} from '../interfaces/star-rating-config.interface';\r\nimport { StarRatingConfigService } from './star-rating-config.service';\r\nimport { StarRatingUtils } from './star-rating.utils';\r\n\r\nexport class StarRating {\r\n  protected config: StarRatingConfig;\r\n\r\n  //Inputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * id property to identify the DOM element\r\n   */\r\n  protected _id: string;\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: string) {\r\n    this._id = value || '';\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * focus\r\n   */\r\n  protected _focus: boolean;\r\n  get focus(): boolean {\r\n    return this._focus;\r\n  }\r\n\r\n  set focus(value: boolean) {\r\n    this._focus = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelText\r\n   */\r\n  protected _labelText: string;\r\n  get labelText(): string {\r\n    return this._labelText;\r\n  }\r\n\r\n  set labelText(value: string) {\r\n    this._labelText = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelPosition\r\n   */\r\n  protected _labelPosition: starRatingLabelPosition;\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(value: starRatingLabelPosition) {\r\n    this._labelPosition = value || this.config.labelPosition;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelVisible\r\n   */\r\n  protected _labelVisible: boolean;\r\n  get labelVisible(): boolean {\r\n    return this._labelVisible;\r\n  }\r\n\r\n  set labelVisible(value: boolean) {\r\n    this._labelVisible = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverEnabled\r\n   */\r\n  protected _hoverEnabled: boolean;\r\n  get hoverEnabled(): boolean {\r\n    return this._hoverEnabled;\r\n  }\r\n\r\n  set hoverEnabled(value: boolean) {\r\n    this._hoverEnabled = value !== undefined ? !!value : false;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * staticColor\r\n   */\r\n  protected _staticColor: starRatingColor;\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor || this.config.staticColor || undefined;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n\r\n    //update color.\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * direction\r\n   */\r\n  protected _direction: starRatingDirection;\r\n  get direction(): starRatingDirection {\r\n    return this._direction;\r\n  }\r\n\r\n  set direction(value: starRatingDirection) {\r\n    this._direction = value || undefined;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * numOfStars\r\n   */\r\n  protected _numOfStars: number;\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(value: number) {\r\n    this._numOfStars = value > 0 ? value : this.config.numOfStars;\r\n\r\n    //update stars array\r\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\r\n\r\n    //update color\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverRating\r\n   */\r\n  protected _hoverRating: number;\r\n  get hoverRating(): number {\r\n    return this._hoverRating;\r\n  }\r\n\r\n  set hoverRating(value: number) {\r\n    this._hoverRating = value > 0 ? value : 0;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * speed\r\n   */\r\n  protected _speed: starRatingSpeed;\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(value: starRatingSpeed) {\r\n    this._speed = value || this.config.speed;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * size\r\n   */\r\n  protected _size: starRatingSizes;\r\n  get size(): starRatingSizes {\r\n    return this._size || this.config.size;\r\n  }\r\n\r\n  set size(value: starRatingSizes) {\r\n    this._size = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * starType\r\n   */\r\n  protected _starType: starRatingStarTypes;\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType || this.config.starType;\r\n  }\r\n\r\n  set starType(value: starRatingStarTypes) {\r\n    this._starType = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * space\r\n   */\r\n  protected _space: starRatingStarSpace;\r\n  get space(): starRatingStarSpace {\r\n    return this._space;\r\n  }\r\n\r\n  set space(value: starRatingStarSpace) {\r\n    this._space = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * readOnly\r\n   */\r\n  protected _readOnly: boolean;\r\n  get readOnly(): boolean {\r\n    return this._readOnly;\r\n  }\r\n\r\n  set readOnly(value: boolean) {\r\n    this._readOnly = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * disabled\r\n   */\r\n  protected _disabled: boolean;\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  private _step: number;\r\n  get step(): number {\r\n    return this._step;\r\n  }\r\n\r\n  set step(value: number) {\r\n    this._step = value > 0 ? value : 1;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * rating\r\n   */\r\n  protected _rating: number;\r\n  get rating(): number {\r\n    return this._rating;\r\n  }\r\n\r\n  /**\r\n   * setRating\r\n   * I use a setter function instead of a set method to enable overrides for this function.\r\n   * @param value\r\n   */\r\n  setRating(value: number) {\r\n    //validate and apply newRating\r\n    let newRating: number = 0;\r\n    if (value >= 0 && value <= this.numOfStars) {\r\n      newRating = value;\r\n    }\r\n\r\n    //limit max value to max number of stars\r\n    if (value > this.numOfStars) {\r\n      newRating = this.numOfStars;\r\n    }\r\n    this._rating = newRating;\r\n\r\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\r\n    this.ratingAsInteger = parseInt(this._rating.toString());\r\n\r\n    //update halfStarsVisible\r\n    this.setHalfStarVisible();\r\n\r\n    //update calculated Color\r\n    this.setColor();\r\n  }\r\n\r\n  set rating(value: number) {\r\n    this.setRating(value);\r\n  }\r\n\r\n  /**\r\n   * showHalfStars\r\n   */\r\n  protected _showHalfStars: boolean;\r\n  get showHalfStars(): boolean {\r\n    return this._showHalfStars;\r\n  }\r\n\r\n  set showHalfStars(value: boolean) {\r\n    this._showHalfStars = !!value;\r\n\r\n    //update halfStarVisible\r\n    this.setHalfStarVisible();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getColor\r\n   */\r\n  getColor: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getHalfStarVisible\r\n   */\r\n  getHalfStarVisible: (rating: number) => boolean;\r\n  /////////////////////////////////////////////\r\n\r\n  //CTRL ONLY\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n  classEmpty: string;\r\n  classHalf: string;\r\n  classFilled: string;\r\n\r\n  pathEmpty: string;\r\n  pathHalf: string;\r\n  pathFilled: string;\r\n\r\n  color: starRatingColor;\r\n  stars: Array<number>;\r\n  ratingAsInteger: number;\r\n  halfStarVisible: boolean;\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    this.config = config;\r\n\r\n    //set default ctrl props\r\n    this.classEmpty = this.config.classEmpty;\r\n    this.classHalf = this.config.classHalf;\r\n    this.classFilled = this.config.classFilled;\r\n    this.pathEmpty = this.config.svgPathEmpty;\r\n    this.pathHalf = this.config.svgPathHalf;\r\n    this.pathFilled = this.config.svgPathFilled;\r\n\r\n    //set default Component Inputs\r\n    if (\r\n      'getColor' in this.config &&\r\n      typeof this.config.getColor === 'function'\r\n    ) {\r\n      this.getColor = this.config.getColor;\r\n    }\r\n\r\n    if (\r\n      'getHalfStarVisible' in this.config &&\r\n      typeof this.config.getHalfStarVisible === 'function'\r\n    ) {\r\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\r\n    }\r\n\r\n    this.numOfStars = this.config.numOfStars;\r\n    this.rating = 0;\r\n    this.step = 1;\r\n  }\r\n\r\n  svgVisible(): boolean {\r\n    return this.starType === 'svg';\r\n  }\r\n\r\n  interactionPossible(): boolean {\r\n    return !this.readOnly && !this.disabled;\r\n  }\r\n\r\n  setColor(): void {\r\n    //check if custom function is given\r\n    if (typeof this.getColor === 'function') {\r\n      this.color = this.getColor(\r\n        this.rating,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    } else {\r\n      this.color = StarRatingUtils.getColor(\r\n        this.rating,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    }\r\n  }\r\n\r\n  setHalfStarVisible(): void {\r\n    //update halfStarVisible\r\n    if (this.showHalfStars) {\r\n      //check if custom function is given\r\n      if (typeof this.getHalfStarVisible === 'function') {\r\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\r\n      } else {\r\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\r\n      }\r\n    } else {\r\n      this.halfStarVisible = false;\r\n    }\r\n  }\r\n\r\n  getComponentClassNames(): string {\r\n    let classNames: string[] = [];\r\n\r\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\r\n    classNames.push(this.halfStarVisible ? 'half' : '');\r\n    classNames.push(this.hoverEnabled ? 'hover' : '');\r\n\r\n    let hoverRating = this.hoverRating\r\n      ? 'hover-' + this.hoverRating\r\n      : 'hover-0';\r\n    classNames.push(this.hoverEnabled ? hoverRating : '');\r\n\r\n    classNames.push(this.space ? 'space-' + this.space : '');\r\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\r\n    classNames.push(this.color ? 'color-' + this.color : '');\r\n    classNames.push(this.starType ? 'star-' + this.starType : '');\r\n    classNames.push(this.speed);\r\n    classNames.push(this.size);\r\n    classNames.push(this.readOnly ? 'read-only' : '');\r\n    classNames.push(this.disabled ? 'disabled' : '');\r\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\r\n\r\n    return classNames.join(' ');\r\n  }\r\n\r\n  increment() {\r\n    //increment to next higher step\r\n    let absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\r\n  }\r\n\r\n  decrement() {\r\n    //decrement to next lower step\r\n    let absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\r\n  }\r\n\r\n  reset() {\r\n    this.rating = 0;\r\n  }\r\n}\r\n",
    "import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarTypes,\r\n  starRatingLabelPosition\r\n} from '../interfaces/star-rating-config.interface';\r\n\r\n/**\r\n * Configuration service for the StarRating component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the star ratings used in the application.\r\n */\r\nexport class StarRatingConfigService implements StarRatingConfig {\r\n  _classEmpty = 'default-star-empty-icon';\r\n\r\n  get classEmpty() {\r\n    return this._classEmpty;\r\n  }\r\n\r\n  set classEmpty(classEmpty: string) {\r\n    this._classEmpty = classEmpty;\r\n  }\r\n\r\n  private _classHalf = 'default-star-half-icon';\r\n\r\n  get classHalf(): string {\r\n    return this._classHalf;\r\n  }\r\n\r\n  set classHalf(classHalf: string) {\r\n    this._classHalf = classHalf;\r\n  }\r\n\r\n  private _classFilled = 'default-star-filled-icon';\r\n\r\n  get classFilled(): string {\r\n    return this._classFilled;\r\n  }\r\n\r\n  set classFilled(classFilled: string) {\r\n    this._classFilled = classFilled;\r\n  }\r\n\r\n  private _numOfStars = 5;\r\n\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(numOfStars: number) {\r\n    this._numOfStars = numOfStars;\r\n  }\r\n\r\n  private _size: starRatingSizes = 'medium';\r\n\r\n  get size(): starRatingSizes {\r\n    return this._size;\r\n  }\r\n\r\n  set size(size: starRatingSizes) {\r\n    this._size = size;\r\n  }\r\n\r\n  private _staticColor: starRatingColor;\r\n\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n  }\r\n\r\n  private _labelPosition: starRatingLabelPosition = 'left';\r\n\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(labelPosition: starRatingLabelPosition) {\r\n    this._labelPosition = labelPosition;\r\n  }\r\n\r\n  private _speed: starRatingSpeed = 'noticeable';\r\n\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(speed: starRatingSpeed) {\r\n    this._speed = speed;\r\n  }\r\n\r\n  private _starType: starRatingStarTypes = 'svg';\r\n\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType;\r\n  }\r\n\r\n  set starType(starType: starRatingStarTypes) {\r\n    this._starType = starType;\r\n  }\r\n\r\n  private _assetsPath = 'assets/images/';\r\n\r\n  get assetsPath(): string {\r\n    return this._assetsPath;\r\n  }\r\n\r\n  set assetsPath(assetsPath: string) {\r\n    this._assetsPath = assetsPath;\r\n  }\r\n\r\n  private _svgPath = this.assetsPath + 'star-rating.icons.svg';\r\n\r\n  get svgPath(): string {\r\n    return this._svgPath;\r\n  }\r\n\r\n  set svgPath(svgPath: string) {\r\n    this._svgPath = svgPath;\r\n  }\r\n\r\n  private _svgEmptySymbolId = 'star-empty';\r\n\r\n  get svgEmptySymbolId(): string {\r\n    return this._svgEmptySymbolId;\r\n  }\r\n\r\n  set svgEmptySymbolId(svgEmptySymbolId: string) {\r\n    this._svgEmptySymbolId = svgEmptySymbolId;\r\n  }\r\n\r\n  private _svgHalfSymbolId = 'star-half';\r\n\r\n  get svgHalfSymbolId(): string {\r\n    return this._svgHalfSymbolId;\r\n  }\r\n\r\n  set svgHalfSymbolId(svgHalfSymbolId: string) {\r\n    this._svgHalfSymbolId = svgHalfSymbolId;\r\n  }\r\n\r\n  private _svgFilledSymbolId = 'star-filled';\r\n\r\n  get svgFilledSymbolId(): string {\r\n    return this._svgFilledSymbolId;\r\n  }\r\n\r\n  set svgFilledSymbolId(svgFilledSymbolId: string) {\r\n    this._svgFilledSymbolId = svgFilledSymbolId;\r\n  }\r\n\r\n  private _svgPathEmpty: string = this.svgPath + '#' + this.svgEmptySymbolId;\r\n\r\n  get svgPathEmpty(): string {\r\n    return this._svgPathEmpty;\r\n  }\r\n\r\n  set svgPathEmpty(svgPathEmpty: string) {\r\n    this._svgPathEmpty = svgPathEmpty;\r\n  }\r\n\r\n  private _svgPathHalf: string = this.svgPath + '#' + this.svgHalfSymbolId;\r\n\r\n  get svgPathHalf(): string {\r\n    return this._svgPathHalf;\r\n  }\r\n\r\n  set svgPathHalf(svgPathHalf: string) {\r\n    this._svgPathHalf = svgPathHalf;\r\n  }\r\n\r\n  private _svgPathFilled: string = this.svgPath + '#' + this.svgFilledSymbolId;\r\n\r\n  get svgPathFilled(): string {\r\n    return this._svgPathFilled;\r\n  }\r\n\r\n  set svgPathFilled(svgPathFilled: string) {\r\n    this._svgPathFilled = svgPathFilled;\r\n  }\r\n\r\n  getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    // if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    // calculate size of smallest fraction\r\n    const fractionSize = numOfStars / 3;\r\n\r\n    // apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n\r\n}\r\n",
    "import { Component, EventEmitter, forwardRef, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ClickEvent } from '../interfaces/click-event.interface';\r\nimport { HoverRatingChangeEvent } from '../interfaces/hover-rating-change-event.interface';\r\nimport { RatingChangeEvent } from '../interfaces/rating-change-event.interface';\r\nimport { StarRating } from '../services/star-rating';\r\nimport { StarRatingConfigService } from '../services/star-rating-config.service';\r\nimport { StarRatingUtils } from '../services/star-rating.utils';\r\n\r\nconst STAR_RATING_CONTROL_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => StarRatingComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'star-rating-comp',\r\n  providers: [STAR_RATING_CONTROL_ACCESSOR],\r\n  inputs: [\r\n    'getHalfStarVisible',\r\n    'getColor',\r\n    'showHalfStars',\r\n    'hoverEnabled',\r\n    'rating',\r\n    'step',\r\n    'disabled',\r\n    'readOnly',\r\n    'space',\r\n    'starType',\r\n    'size',\r\n    'speed',\r\n    'numOfStars',\r\n    'direction',\r\n    'staticColor',\r\n    //, 'labelVisible'\r\n    'labelPosition',\r\n    'labelText',\r\n    'id'\r\n  ],\r\n  outputs: ['clickEmitter', 'ratingChangeEmitter', 'hoverRatingChangeEmitter'],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (blur)=\"onBlur($event)\"\r\n  (focus)=\"onFocus($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty default-star-empty-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half default-star-half-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled default-star-filled-icon\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class StarRatingComponent extends StarRating\r\n  implements ControlValueAccessor {\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  clickEmitter: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.clickEmitter) {\r\n      this.clickEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  ratingChangeEmitter: EventEmitter<RatingChangeEvent> = new EventEmitter<\r\n    RatingChangeEvent\r\n  >();\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChangeEmitter) {\r\n      this.ratingChangeEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  hoverRatingChangeEmitter: EventEmitter<\r\n    HoverRatingChangeEvent\r\n  > = new EventEmitter<HoverRatingChangeEvent>();\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChangeEmitter) {\r\n      this.hoverRatingChangeEmitter.emit($event);\r\n    }\r\n  }\r\n\r\n  onTouch: Function;\r\n  onModelChange: Function;\r\n  private onModelChangeRegistered: boolean = false;\r\n  private onTouchRegistered: boolean = false;\r\n\r\n  saveOnTouch() {\r\n    if (this.onTouchRegistered) {\r\n      this.onTouch();\r\n    }\r\n  }\r\n\r\n  saveOnModelChange(value: number) {\r\n    if (this.onModelChangeRegistered) {\r\n      this.onModelChange(value);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      let dStr = 'Digit';\r\n      let digit: number = parseInt(\r\n        eventCode.substr(dStr.length, eventCode.length - 1)\r\n      );\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (\r\n      handlers[event['code']] ||\r\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\r\n    ) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Focus events\r\n  onBlur(event: FocusEvent) {\r\n    this.focus = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    this.focus = true;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString()) : 0;\r\n\r\n    //fire onHoverRatingChange event\r\n    let $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\r\n    this.saveOnHover($event);\r\n  }\r\n\r\n  /**Form Control - ControlValueAccessor implementation**/\r\n\r\n  writeValue(obj: any): void {\r\n    this.rating = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n    this.onModelChangeRegistered = true;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n    this.onTouchRegistered = true;\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    let initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      let $event: RatingChangeEvent = { rating: this.rating };\r\n      this.saveOnRatingChange($event);\r\n\r\n      this.saveOnModelChange(this.rating);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    let onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n  }\r\n}\r\n",
    "import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { StarRatingComponent } from './components/star-rating.component';\r\nimport { StarRatingConfigService } from './services/star-rating-config.service';\r\n\r\nconst DECLARATIONS = [StarRatingComponent];\r\nconst EXPORTS = [DECLARATIONS];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [DECLARATIONS],\r\n  exports: [EXPORTS]\r\n})\r\nexport class StarRatingModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: [StarRatingConfigService]\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "StarRatingConfig",
    "StarRatingUtils",
    "getStarsArray",
    "numOfStars",
    "stars",
    "i",
    "push",
    "getHalfStarVisible",
    "rating",
    "Math",
    "abs",
    "getColor",
    "staticColor",
    "fractionSize",
    "color",
    "isDigitKeyEventCode",
    "eventCode",
    "indexOf",
    "StarRating",
    "config",
    "this",
    "classEmpty",
    "classHalf",
    "classFilled",
    "pathEmpty",
    "svgPathEmpty",
    "pathHalf",
    "svgPathHalf",
    "pathFilled",
    "svgPathFilled",
    "step",
    "defineProperty",
    "prototype",
    "get",
    "_id",
    "set",
    "value",
    "_focus",
    "_labelText",
    "_labelPosition",
    "labelPosition",
    "_labelVisible",
    "_hoverEnabled",
    "undefined",
    "_staticColor",
    "setColor",
    "_direction",
    "_numOfStars",
    "_hoverRating",
    "_speed",
    "speed",
    "_size",
    "size",
    "_starType",
    "starType",
    "_space",
    "_readOnly",
    "_disabled",
    "_step",
    "_rating",
    "setRating",
    "newRating",
    "ratingAsInteger",
    "parseInt",
    "toString",
    "setHalfStarVisible",
    "_showHalfStars",
    "svgVisible",
    "interactionPossible",
    "readOnly",
    "disabled",
    "showHalfStars",
    "halfStarVisible",
    "getComponentClassNames",
    "classNames",
    "hoverEnabled",
    "hoverRating",
    "space",
    "direction",
    "join",
    "increment",
    "absDiff",
    "decrement",
    "reset",
    "StarRatingConfigService",
    "_classEmpty",
    "_classHalf",
    "_classFilled",
    "_assetsPath",
    "_svgPath",
    "assetsPath",
    "_svgEmptySymbolId",
    "_svgHalfSymbolId",
    "_svgFilledSymbolId",
    "_svgPathEmpty",
    "svgPath",
    "svgEmptySymbolId",
    "_svgPathHalf",
    "svgHalfSymbolId",
    "_svgPathFilled",
    "svgFilledSymbolId",
    "STAR_RATING_CONTROL_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "StarRatingComponent",
    "multi",
    "_super",
    "_this",
    "call",
    "clickEmitter",
    "EventEmitter",
    "ratingChangeEmitter",
    "hoverRatingChangeEmitter",
    "onModelChangeRegistered",
    "onTouchRegistered",
    "__",
    "constructor",
    "create",
    "tslib_1.__extends",
    "saveOnClick",
    "$event",
    "emit",
    "saveOnRatingChange",
    "saveOnHover",
    "saveOnTouch",
    "onTouch",
    "saveOnModelChange",
    "onModelChange",
    "onKeyDown",
    "event",
    "digit",
    "handlers",
    "Minus",
    "ArrowDown",
    "ArrowLeft",
    "Plus",
    "ArrowRight",
    "ArrowUp",
    "Backspace",
    "Delete",
    "Digit0",
    "substr",
    "length",
    "preventDefault",
    "stopPropagation",
    "onBlur",
    "focus",
    "onFocus",
    "onStarHover",
    "writeValue",
    "obj",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "initValue",
    "onStarClicked",
    "onClickEventObject",
    "type",
    "Component",
    "args",
    "selector",
    "providers",
    "inputs",
    "outputs",
    "styles",
    "template",
    "DECLARATIONS",
    "EXPORTS",
    "StarRatingModule",
    "forRoot",
    "ngModule",
    "forChild",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
